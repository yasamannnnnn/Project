# -*- coding: utf-8 -*-
"""Copy of Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VpGrt8pOOEvA4o8JpURAkrelMEnTIjzL
"""

# Install required libraries
!pip install pillow ipywidgets

import re
import requests
from PIL import Image
import matplotlib.pyplot as plt
import ipywidgets as widgets
from IPython.display import display, clear_output
from io import BytesIO

# Sample image URLs (you can add more!)
image_urls = {
    "cell_structure.png": "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Animal_Cell.svg/512px-Animal_Cell.svg.png",
    "cellular_mitosis.jpg": "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Mitosis_diagram.jpg/512px-Mitosis_diagram.jpg",
    "dna_model.png": "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/DNA_double_helix_horizontal.png/512px-DNA_double_helix_horizontal.png"
}

# Download images into memory
image_data = {}
for name, url in image_urls.items():
    try:
        response = requests.get(url)
        img = Image.open(BytesIO(response.content))
        image_data[name] = img
    except Exception as e:
        print(f"Failed to load {name}: {e}")

# Search function using regex
def search_images(pattern):
    results = []
    for filename in image_data.keys():
        if re.search(pattern, filename, re.IGNORECASE):
            results.append(filename)
    return results

# Image preview function
def preview_image(filename):
    img = image_data.get(filename)
    if img:
        img.thumbnail((300, 300))
        plt.imshow(img)
        plt.axis('off')
        plt.title(filename)
        plt.show()
    else:
        print("Image not found.")

# Widgets
search_box = widgets.Text(
    value='',
    placeholder='Enter search pattern...',
    description='Search:',
    style={'description_width': 'initial'},
    layout=widgets.Layout(width='50%')
)

dropdown = widgets.Dropdown(
    options=[],
    description='Select Image:',
    layout=widgets.Layout(width='50%')
)

output = widgets.Output()

# Event handlers
def on_search_change(change):
    pattern = change['new']
    matches = search_images(pattern)
    dropdown.options = matches if matches else ['No matches found']

def on_dropdown_change(change):
    with output:
        clear_output(wait=True)
        if change['new'] != 'No matches found':
            preview_image(change['new'])

search_box.observe(on_search_change, names='value')
dropdown.observe(on_dropdown_change, names='value')

# Display UI
display(search_box)
display(dropdown)
display(output)